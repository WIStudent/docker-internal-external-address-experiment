version: "3.9"
services:
  service1_1:
    build: ./services
    entrypoint: node service1.js --name "service1 instance 1" --port 80
    networks:
      network1:
        aliases:
          - service1.local
      network_lb:
        aliases:
          - service1-instance1.local

  service2_1:
    build: ./services
    entrypoint: node service2.js --name "service2 instance 1" --port 80 --service1-address http://service1.local
    networks:
      network1:
        aliases:
          - service2.local
      network_lb:
        aliases:
          - service2-instance1.local

  service3_1:
    build: ./services
    entrypoint: node service3.js --name "service3 instance 1" --port 80 --service1-address http://service1.local
    networks:
      network1:
        aliases:
          - service3.local
      network_lb:
        aliases:
          - service3-instance1.local

  service1_2:
    build: ./services
    entrypoint: node service1.js --name "service1 instance 2" --port 8000
    networks:
      network2:

  service2_2:
    build: ./services
    entrypoint: node service2.js --name "service2 instance 2" --port 8000 --service1-address http://service1.local
    networks:
      network2:

  service3_2:
    build: ./services
    entrypoint: node service3.js --name "service3 instance 2" --port 8000 --service1-address http://service1.local
    networks:
      network2:
  
  reverse_proxy:
    image: nginx
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    command: nginx-debug -g 'daemon off;'
    depends_on:
      - service1_2
      - service2_2
      - service3_2
    networks:
      network2:
        aliases:
          - service1.local
          - service2.local
          - service3.local
      network_lb:
        aliases:
          - service1-instance2.local
          - service2-instance2.local
          - service3-instance2.local

  load_balancer:
    image: nginx
    volumes:
      - ./load-balancer/nginx.conf:/etc/nginx/nginx.conf:ro
    command: nginx-debug -g 'daemon off;'
    depends_on:
      - service1_1
      - service2_1
      - service3_1
      - reverse_proxy
    ports:
      - "80:80"
    networks:
      network_lb:

networks:
  network1:
  network2:
  network_lb:
